version: '3.8'

networks:
  internal:


volumes:
  mongodb:
  minio:
  db_data:
  platform:


services:

  platform:
    image: trustcerts/platform:${IMAGE_TAG-dev}
    # command: npm run start:dev
    volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
    env_file:
      - .env
    ports:
      - 3223:3000
    depends_on:
      - mongo
    networks:
      internal:

  trustcreator:
    image: trustcerts/trustcreator:${IMAGE_TAG-dev}
    restart: always
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - .env
    ports:
      - 3222:3000
    depends_on:
      - db
    networks:
      internal:

  db:
    image: mysql
    restart: always
    command: 
      --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
      - db_data:/var/lib/mysql
    networks:
      internal:


  mongo:
    image: mongo
    restart: always
    volumes:
      - mongodb:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpw
      - MONGO_INITDB_DATABASE=platform
    ports:
      - 27017:27017
    networks:
      internal:

  minio:
    image: minio/minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    ports:
      - 9001:9001
    command: server /data --console-address ":9001"
    networks:
      internal:
    volumes:
      - minio:/data

